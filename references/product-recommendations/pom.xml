<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2021 Google LLC
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>exco</groupId>
	<artifactId>product-recommendations-v1</artifactId>
	<version>1.0</version>
	<name>product-recommendations-v1</name>
	<packaging>pom</packaging>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>https://repo1.maven.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
		<project.root.dir>${basedir}</project.root.dir>
		<target.root.dir>${basedir}/target</target.root.dir>
		<commit>none</commit>
		<branch>local</branch>
	</properties>

	<!-- This is where you add environment specific properties under various profile names
		 For apigee.options, refer to "Advanced Configuration Options" under https://github.com/apigee/apigee-deploy-maven-plugin#pom-xml-sample
	-->
	<profiles>
		<profile>
			<id>eval</id>
			<properties>
				<apigee.profile>eval</apigee.profile>
				<apigee.org>${apigeeOrg}</apigee.org>
				<apigee.env>${apigeeEnv}</apigee.env>
				<api.northbound.domain>${envGroupHostname}</api.northbound.domain>
				<gcp.projectid>${gcpProjectId}</gcp.projectid>
				<apigee.googletoken.email>${googleTokenEmail}</apigee.googletoken.email>
				<api.userid>${integrationTestUserId}</api.userid>
				<!-- Leave these as they are -->
				<apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.config.file>target/edge.json</apigee.config.file>
				<apigee.config.exportDir>target/test/integration</apigee.config.exportDir>
				<apigee.config.options>update</apigee.config.options>
				<apigee.authtype>oauth</apigee.authtype>
				<apigee.bearer>${bearer}</apigee.bearer>
				<apigee.options>override</apigee.options>
				<apigee.app.ignoreAPIProducts>true</apigee.app.ignoreAPIProducts>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- copy the full apiproxy folder to target folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<!--source -->
									<directory>${project.root.dir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>edge.json</include>
										<include>apiproxy/**</include>
										<include>test/integration/**</include>
									</includes>
								</resource>
							</resources>
							<!--target -->
							<outputDirectory>${target.root.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Do replacements -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.2</version>
				<executions>
					<execution>
						<id>replace</id>
						<phase>process-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<basedir>${target.root.dir}</basedir>
					<includes>
						<include>apiproxy/product-recommendations-v1.xml</include> <!-- PROJECT_ID, DESCRIPTION -->
						<include>apiproxy/targets/default.xml</include> <!-- PROJECT_ID -->
						<include>apiproxy/policies/AM-process-request-params.xml</include> <!-- userId value 6929470170340317899-1 -->
						<include>apiproxy/policies/AM-create-query-request.xml</include> <!-- PROJECT_ID -->
						<include>apiproxy/policies/SC-spanner-session.xml</include> <!-- PROJECT_ID -->
						<include>test/integration/test-config.json</include> <!-- API_NORTHBOUND_DOMAIN, APIGEE_ENVIRONMENT -->
						<include>edge.json</include> <!-- APIGEE_ENVIRONMENT -->
					</includes>
					<replacements>
						<replacement>
							<token>PROJECT_ID</token>
							<value>${gcp.projectid}</value>
						</replacement>
						<replacement>
							<token>API_NORTHBOUND_DOMAIN</token>
							<value>${api.northbound.domain}</value>
						</replacement>
						<replacement>
							<token>DESCRIPTION</token>
							<value>commit ${commit} from branch ${branch} by ${user.name}</value>
						</replacement>
						<replacement>
							<token>APIGEE_ENVIRONMENT</token>
							<value>${apigee.env}</value>
						</replacement>
						<replacement>
							<!-- CUSTOMER_USERID 6929470170340317899-1 in AM-process-request-params.xml replace with command line option -->
							<token>CUSTOMER_USERID</token>
							<value>${api.userid}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>

			<!-- apigee Deploy prefix: apigee-enterprise -->
			<plugin>
				<groupId>io.apigee.build-tools.enterprise4g</groupId>
				<artifactId>apigee-edge-maven-plugin</artifactId>
				<version>2.2.2</version>
				<executions>
					<execution>
						<id>configure-bundle-step</id>
						<phase>package</phase>
						<goals>
							<goal>configure</goal>
						</goals>
					</execution>
					<!--deploy bundle -->
					<execution>
						<id>deploy-bundle-step</id>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- apigee Configuration: prefix: apigee-config -->
			<plugin>
				<groupId>com.apigee.edge.config</groupId>
				<artifactId>apigee-config-maven-plugin</artifactId>
				<version>2.2.2</version>
				<executions>
					<execution>
						<id>create-config-apiproduct</id>
						<phase>install</phase>
						<goals>
							<goal>apiproducts</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-developer</id>
						<phase>install</phase>
						<goals>
							<goal>developers</goal>
						</goals>
					</execution>
					<execution>
						<id>create-config-app</id>
						<phase>install</phase>
						<configuration>
							<skip>${skip.apps}</skip>
						</configuration>
						<goals>
							<goal>apps</goal>
						</goals>
					</execution>
					<execution>
						<id>export-config-app</id>
						<phase>install</phase>
						<configuration>
							<skip>${skip.export}</skip>
						</configuration>
						<goals>
							<goal>exportAppKeys</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- testing: eslint, apigeelint and integration -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<!-- npm install -->
					<execution>
						<id>npm-install</id>
						<phase>validate</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<commandlineArgs>
								install --silent --no-fund
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- npm and node versions -->
					<execution>
						<id>npm-versions</id>
						<phase>validate</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<commandlineArgs>
								run npm-versions
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- eslint -->
					<execution>
						<id>eslint</id>
						<phase>validate</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<commandlineArgs>
								run eslint
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- apigeelint -->
					<execution>
						<id>apigeelint</id>
						<phase>validate</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<commandlineArgs>
								run apigeelint
							</commandlineArgs>
						</configuration>
					</execution>
					<!-- integration -->
					<execution>
						<id>integration</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm</executable>
							<commandlineArgs>
								run integration
							</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- cleaning dirs -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<!-- Don't clean for iteration on tests -->
				<configuration>
					<skip>${skip.clean}</skip>
				</configuration>
				<executions>
					<execution>
						<id>auto-clean-init</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<id>auto-clean-install</id>
						<phase>install</phase>
						<configuration>
							<filesets>
								<fileset>
									<directory>targetnode</directory>
								</fileset>
							</filesets>
						</configuration>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
